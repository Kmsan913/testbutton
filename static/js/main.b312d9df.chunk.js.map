{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","walletAddress","setWalletAddress","requestAccount","_requestAccount","apply","this","arguments","asyncToGenerator","regenerator_default","a","mark","_callee","accounts","wrap","_context","prev","next","console","log","window","ethereum","request","method","sent","t0","alert","stop","provider","ethers","providers","Web3Provider","_getCurrentBlock","_callee3","currentBlock","_context3","getBlockNumber","getCurrentBlock","react_default","createElement","className","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"8RAgDeA,MA5Cf,WAAe,IAAAC,EAC6BC,mBAAS,IADtCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACSI,EADTJ,EAAA,YAEEK,IAFF,OAAAC,EAAAC,MAAAC,KAAAC,WAAA,SAAAH,IAAA,OAAAA,EAAAL,OAAAS,EAAA,EAAAT,CAAAU,EAAAC,EAAAC,KAEb,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACEC,QAAQC,IAAI,uBAETC,OAAOC,SAHZ,CAAAN,EAAAE,KAAA,gBAIIC,QAAQC,IAAI,oBAJhBJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAM6BG,OAAOC,SAASC,QAAQ,CAC7CC,OAAQ,wBAPhB,OAMYV,EANZE,EAAAS,KAQQtB,EAAiBW,EAAS,IARlCE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAUMG,QAAQC,IAAI,oBAVlB,QAAAJ,EAAAE,KAAA,iBAcIS,MAAM,wBAdV,yBAAAX,EAAAY,SAAAf,EAAA,mBAFaP,MAAAC,KAAAC,WAyBb,IAAMqB,EAAW,IAAIC,IAAOC,UAAUC,aAAaX,OAAOC,UAzB7C,SAAAW,IAAA,OAAAA,EAAAjC,OAAAS,EAAA,EAAAT,CAAAU,EAAAC,EAAAC,KA0Bb,SAAAsB,IAAA,IAAAC,EAAA,OAAAzB,EAAAC,EAAAI,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EAC2BW,EAASQ,iBADpC,OACMF,EADNC,EAAAX,KAEEN,QAAQC,IAAIe,GAFd,wBAAAC,EAAAR,SAAAM,OA1Ba5B,MAAAC,KAAAC,WAgCb,OAhCa,WAAAyB,EAAA3B,MAAAC,KAAAC,WA+Bb8B,GAEEC,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,UAAQC,UAAU,cAChBF,EAAA5B,EAAA6B,cAAA,UACAE,QAAStC,GADT,mBAGAmC,EAAA5B,EAAA6B,cAAA,6BAAqBtC,MC9BdyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrB,EAAA5B,EAAA6B,cAACD,EAAA5B,EAAMkD,WAAP,KACEtB,EAAA5B,EAAA6B,cAACsB,EAAD,QAOJnB","file":"static/js/main.b312d9df.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  async function requestAccount(){\n    console.log(\"Requesting Account\");\n\n    if(window.ethereum){\n      console.log(\"wallet connected\");\n      try{\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",});\n          setWalletAddress(accounts[0]);\n      }catch(error){\n        console.log(\"error connecting\");\n      }\n    }\n    else {\n      alert(\"Wallet not connected\");\n    }\n  }\n  async function connectWallet(){\n    if(typeof window.ethereum !== 'undefine'){\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n    }\n  }\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  async function getCurrentBlock() {\n    let currentBlock = await provider.getBlockNumber();\n    console.log(currentBlock);\n  }\n  \n  getCurrentBlock();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button\n        onClick={requestAccount}\n        >Request Account</button>\n        <h3>Wallet Address: {walletAddress}</h3>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}